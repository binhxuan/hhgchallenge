{"version":3,"sources":["Counter/counter.tsx","Table/modalNew.tsx","Table/modalEdit.tsx","Table/modalDelete.tsx","Table/table.tsx","Container/container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CounterCon","props","useState","count","setCount","className","id","Button","appearance","onClick","e","ModalNew","loading","setLoading","formValue","setFormValue","rsFormReference","useRef","StringType","Schema","Types","model","Model","name","isRequired","email","position","Modal","show","modalNew","size","onHide","setModalNew","Header","Title","Body","Form","fluid","onChange","ref","FormGroup","ControlLabel","FormControl","type","Footer","current","check","axios","method","url","data","JSON","stringify","headers","then","res","setFlagSubmit","flagSubmit","Notification","success","title","placement","description","duration","catch","err","console","log","ModalEdit","useEffect","idEdit","modalEdit","setModalEdit","ModalDel","userName","setUserName","modalDel","setModalDel","Column","Table","HeaderCell","Cell","Pagination","TableCon","setData","page","setPage","displayLength","setDisplayLength","showData","setShowData","setIdEdit","tmpdata","reverse","filter","v","i","start","ActionCell","style","padding","rowData","autoHeight","bordered","cellBordered","width","align","dataKey","flexGrow","lengthMenu","value","label","activePage","total","length","onChangePage","onChangeLength","headerStyles","fontSize","backgroundColor","color","ContainerCon","Container","Sidebar","display","flexDirection","collapsible","Sidenav","onSelect","Nav","Item","eventKey","Content","defaultProps","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14736010.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nimport { Button } from 'rsuite';\r\n\r\nimport './counter.scss'\r\n\r\ninterface IProps {\r\n    \r\n}\r\n\r\nconst CounterCon:React.FC<IProps> = (props:IProps) => {\r\n\r\n    const [count, setCount] = useState<number>(0)\r\n\r\n    const add = () => {\r\n        setCount(count + 1)\r\n    }\r\n\r\n    const reset = () => {\r\n        setCount(0)\r\n    }\r\n\r\n    return (\r\n        <div className=\"countercon\">\r\n            <div id=\"countval\">{count}</div>\r\n            <div id=\"btncount\">\r\n                <Button appearance=\"primary\" onClick={(e) => {add()}}>Increase</Button>\r\n            </div>\r\n            <div id=\"btnreset\">\r\n                <Button onClick={(e) => {reset()}}>Reset</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterCon","import React, {useState, useRef} from 'react'\r\n\r\nimport { Button, Modal, FormControl, Form, FormGroup, ControlLabel, Notification, Schema  } from 'rsuite';\r\n\r\nimport axios from 'axios'\r\n\r\nimport './modal.scss'\r\n\r\ninterface IProps {\r\n    modalNew?:boolean,\r\n    setModalNew?:any,\r\n    setPage?:any,\r\n    setDisplayLength?:any,\r\n    flagSubmit?:boolean,\r\n    setFlagSubmit?:any\r\n}\r\n\r\nconst ModalNew:React.FC<IProps> = (props:IProps) => {\r\n\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    const [formValue, setFormValue] = useState<object>({})\r\n\r\n    const rsFormReference:any = useRef(null)\r\n\r\n  const { StringType } = Schema.Types\r\n\r\n  const model = Schema.Model({\r\n    name: StringType().isRequired('This field required.'),\r\n    email: StringType().isRequired('This field required.'),\r\n    position: StringType().isRequired('This field required.'),\r\n  })\r\n\r\n    const handleSubmit = () => {\r\n        if (rsFormReference.current.check()) {\r\n        setLoading(true)\r\n            axios({\r\n          method: 'POST',\r\n          url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users',\r\n          data: JSON.stringify(formValue),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n        })\r\n          .then((res) => {\r\n            // console.log(res.data)\r\n            props.setFlagSubmit(!props.flagSubmit)\r\n            props.setModalNew(false)\r\n            Notification.success({\r\n                title: 'Success',\r\n                placement: 'bottomEnd',\r\n                description: 'Created successfully !',\r\n                duration: 3000\r\n              });\r\n            \r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            // let title = 'Error'\r\n            // let decs = 'Something wrong ! Please check again !'\r\n            // openError({ title, decs })\r\n          })\r\n        }\r\n    }\r\n\r\n  //   useEffect(() => {\r\n  //     axios({\r\n  //         method: 'POST',\r\n  //         url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users',\r\n  //         data: JSON.stringify({\r\n  //           email: 'asd',\r\n  //           position: 'asd',\r\n  //           name:'asd'\r\n  //         }),\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       }\r\n  //       })\r\n  //         .then((res) => {\r\n  //           console.log(res.data)\r\n  //           let tmpdata = res.data.filter((v:any,i:any) => {\r\n  //             const start = displayLength * (page - 1);\r\n  //             const end = start + displayLength;\r\n  //             return i >= start && i < end;\r\n  //           })\r\n  //           console.log(tmpdata)\r\n  //           setData(res.data)\r\n  //           setShowData(tmpdata)   \r\n  //         })\r\n  //         .catch((err) => {\r\n  //           console.log(err)\r\n  //           // let title = 'Error'\r\n  //           // let decs = 'Something wrong ! Please check again !'\r\n  //           // openError({ title, decs })\r\n  //         })\r\n  // }, [page, displayLength])\r\n\r\n    return (\r\n        <div>\r\n        <Modal show={props.modalNew} size=\"md\" onHide={() => {props.setModalNew(false)}}>\r\n          <Modal.Header>\r\n            <Modal.Title>New user</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form\r\n              fluid\r\n              onChange={(formValue) => {\r\n                //   console.log(formValue)\r\n                  setFormValue(formValue)\r\n              }}\r\n              model={model}\r\n              ref={rsFormReference}\r\n            >\r\n              <FormGroup>\r\n                <ControlLabel className=\"required\">Name</ControlLabel>\r\n                <FormControl name=\"name\" />\r\n                {/* <HelpBlock>Required</HelpBlock> */}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel className=\"required\">Email</ControlLabel>\r\n                <FormControl name=\"email\" type=\"email\" />\r\n                {/* <HelpBlock>Required</HelpBlock> */}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel className=\"required\">Position</ControlLabel>\r\n                <FormControl name=\"position\" />\r\n              </FormGroup>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button appearance=\"primary\" onClick={() => {handleSubmit()}} loading={loading}>\r\n              Save\r\n            </Button>\r\n            <Button appearance=\"subtle\" onClick={() => {props.setModalNew(false)}}>\r\n              Cancel\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalNew","import React, {useState, useEffect, useRef} from 'react'\r\n\r\nimport { Button, Modal, FormControl, Form, FormGroup, ControlLabel, Notification,  Schema  } from 'rsuite';\r\n\r\nimport axios from 'axios'\r\n\r\nimport './modal.scss'\r\n\r\nimport './modal.scss'\r\n\r\ninterface IProps {\r\n    modalEdit?:boolean,\r\n    setModalEdit?:any,\r\n    setPage?:any,\r\n    setDisplayLength?:any,\r\n    flagSubmit?:boolean,\r\n    setFlagSubmit?:any,\r\n    idEdit?:string\r\n}\r\n\r\nconst ModalEdit:React.FC<IProps> = (props:IProps) => {\r\n\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    const [formValue, setFormValue] = useState<object>({})\r\n\r\n    const rsFormReference:any = useRef(null)\r\n\r\n    const { StringType } = Schema.Types\r\n  \r\n    const model = Schema.Model({\r\n      name: StringType().isRequired('This field required.'),\r\n      email: StringType().isRequired('This field required.'),\r\n      position: StringType().isRequired('This field required.'),\r\n    })\r\n\r\n    const handleSubmit = () => {\r\n      if (rsFormReference.current.check()) {\r\n      setLoading(true)\r\n            axios({\r\n          method: 'PUT',\r\n          url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users/' + props.idEdit,\r\n          data: JSON.stringify(formValue),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n        })\r\n          .then((res) => {\r\n            console.log(res.data)\r\n            props.setFlagSubmit(!props.flagSubmit)\r\n            props.setModalEdit(false)\r\n            Notification.success({\r\n              title: 'Success',\r\n              placement: 'bottomEnd',\r\n              description: 'Updated successfully !',\r\n              duration: 3000\r\n            });\r\n            \r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            // let title = 'Error'\r\n            // let decs = 'Something wrong ! Please check again !'\r\n            // openError({ title, decs })\r\n          })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n     axios({\r\n          method: 'GET',\r\n          url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users/' + props.idEdit,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n        })\r\n          .then((res) => {\r\n            // console.log(res.data)\r\n            // let tmpdata = res.data.filter((v:any,i:any) => {\r\n            //   const start = displayLength * (page - 1);\r\n            //   const end = start + displayLength;\r\n            //   return i >= start && i < end;\r\n            // })\r\n            // console.log(tmpdata)\r\n            // setData(res.data)\r\n            // setShowData(tmpdata)\r\n            setFormValue({\r\n              name:res.data.name,\r\n              email:res.data.email,\r\n              position:res.data.position\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            // let title = 'Error'\r\n            // let decs = 'Something wrong ! Please check again !'\r\n            // openError({ title, decs })\r\n          })\r\n    }, [props.idEdit])\r\n\r\n  //   useEffect(() => {\r\n  //     axios({\r\n  //         method: 'POST',\r\n  //         url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users',\r\n  //         data: JSON.stringify({\r\n  //           email: 'asd',\r\n  //           position: 'asd',\r\n  //           name:'asd'\r\n  //         }),\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       }\r\n  //       })\r\n  //         .then((res) => {\r\n  //           console.log(res.data)\r\n  //           let tmpdata = res.data.filter((v:any,i:any) => {\r\n  //             const start = displayLength * (page - 1);\r\n  //             const end = start + displayLength;\r\n  //             return i >= start && i < end;\r\n  //           })\r\n  //           console.log(tmpdata)\r\n  //           setData(res.data)\r\n  //           setShowData(tmpdata)   \r\n  //         })\r\n  //         .catch((err) => {\r\n  //           console.log(err)\r\n  //           // let title = 'Error'\r\n  //           // let decs = 'Something wrong ! Please check again !'\r\n  //           // openError({ title, decs })\r\n  //         })\r\n  // }, [page, displayLength])\r\n\r\n    return (\r\n        <div>\r\n        <Modal show={props.modalEdit} size=\"md\" onHide={() => {props.setModalEdit(false)}}>\r\n          <Modal.Header>\r\n            <Modal.Title>Edit User</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form\r\n              fluid\r\n              onChange={(formValue) => {\r\n                  // console.log(formValue)\r\n                  setFormValue(formValue)\r\n              }}\r\n              formValue={formValue}\r\n              model={model}\r\n              ref={rsFormReference}\r\n            >\r\n              <FormGroup>\r\n                <ControlLabel className=\"required\">Name</ControlLabel>\r\n                <FormControl name=\"name\" />\r\n                {/* <HelpBlock>Required</HelpBlock> */}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel className=\"required\">Email</ControlLabel>\r\n                <FormControl name=\"email\" type=\"email\" />\r\n                {/* <HelpBlock>Required</HelpBlock> */}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel className=\"required\">Position</ControlLabel>\r\n                <FormControl name=\"position\" />\r\n              </FormGroup>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button appearance=\"primary\" onClick={() => {handleSubmit()}} loading={loading}>\r\n              Save\r\n            </Button>\r\n            <Button appearance=\"subtle\" onClick={() => {props.setModalEdit(false)}}>\r\n              Cancel\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalEdit","import React, {useState, useEffect} from 'react'\r\n\r\nimport { Button, Modal, Notification } from 'rsuite';\r\n\r\nimport axios from 'axios'\r\n\r\nimport './modal.scss'\r\n\r\ninterface IProps {\r\n    modalDel?:boolean,\r\n    setModalDel?:any,\r\n    setPage?:any,\r\n    setDisplayLength?:any,\r\n    flagSubmit?:boolean,\r\n    setFlagSubmit?:any,\r\n    idEdit?:string\r\n}\r\n\r\nconst ModalDel:React.FC<IProps> = (props:IProps) => {\r\n\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    const [formValue, setFormValue] = useState<object>({})\r\n\r\n    const [userName, setUserName] = useState<string>('')\r\n\r\n    const handleSubmit = () => {\r\n      setLoading(true)\r\n            axios({\r\n          method: 'DELETE',\r\n          url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users/' + props.idEdit,\r\n          data: JSON.stringify(formValue),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n        })\r\n          .then((res) => {\r\n            // console.log(res.data)\r\n            props.setFlagSubmit(!props.flagSubmit)\r\n            props.setModalDel(false)\r\n            Notification.success({\r\n              title: 'Success',\r\n              placement: 'bottomEnd',\r\n              description: 'Deleted successfully !',\r\n              duration: 3000\r\n            });\r\n            \r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            // let title = 'Error'\r\n            // let decs = 'Something wrong ! Please check again !'\r\n            // openError({ title, decs })\r\n          })\r\n    }\r\n\r\n    useEffect(() => {\r\n     axios({\r\n          method: 'GET',\r\n          url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users/' + props.idEdit,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n        })\r\n          .then((res) => {\r\n            // console.log(res.data)\r\n            // let tmpdata = res.data.filter((v:any,i:any) => {\r\n            //   const start = displayLength * (page - 1);\r\n            //   const end = start + displayLength;\r\n            //   return i >= start && i < end;\r\n            // })\r\n            // console.log(tmpdata)\r\n            // setData(res.data)\r\n            // setShowData(tmpdata)\r\n            setFormValue({\r\n              name:res.data.name,\r\n              email:res.data.email,\r\n              position:res.data.position\r\n            })\r\n            setUserName(res.data.name)\r\n          })\r\n          .catch((err) => {\r\n            console.log(err)\r\n            // let title = 'Error'\r\n            // let decs = 'Something wrong ! Please check again !'\r\n            // openError({ title, decs })\r\n          })\r\n    }, [props.idEdit])\r\n\r\n  //   useEffect(() => {\r\n  //     axios({\r\n  //         method: 'POST',\r\n  //         url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users',\r\n  //         data: JSON.stringify({\r\n  //           email: 'asd',\r\n  //           position: 'asd',\r\n  //           name:'asd'\r\n  //         }),\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       }\r\n  //       })\r\n  //         .then((res) => {\r\n  //           console.log(res.data)\r\n  //           let tmpdata = res.data.filter((v:any,i:any) => {\r\n  //             const start = displayLength * (page - 1);\r\n  //             const end = start + displayLength;\r\n  //             return i >= start && i < end;\r\n  //           })\r\n  //           console.log(tmpdata)\r\n  //           setData(res.data)\r\n  //           setShowData(tmpdata)   \r\n  //         })\r\n  //         .catch((err) => {\r\n  //           console.log(err)\r\n  //           // let title = 'Error'\r\n  //           // let decs = 'Something wrong ! Please check again !'\r\n  //           // openError({ title, decs })\r\n  //         })\r\n  // }, [page, displayLength])\r\n\r\n    return (\r\n        <div>\r\n        <Modal show={props.modalDel} size=\"md\" onHide={() => {props.setModalDel(false)}}>\r\n          <Modal.Header>\r\n            <Modal.Title>Delete User</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n              Are you sure to delete user <strong>{userName}</strong> ?\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button appearance=\"primary\" onClick={() => {handleSubmit()}} loading={loading}>\r\n              Yes\r\n            </Button>\r\n            <Button appearance=\"subtle\" onClick={() => {props.setModalDel(false)}}>\r\n              No\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalDel","import React, {useState, useEffect} from 'react'\r\n\r\nimport { Button, Table } from 'rsuite';\r\n\r\nimport axios from 'axios'\r\n\r\nimport ModalNew from './modalNew'\r\n\r\nimport ModalEdit from './modalEdit'\r\n\r\nimport ModalDel from './modalDelete'\r\n\r\nimport './table.scss'\r\n\r\ninterface IProps {\r\n    \r\n}\r\n\r\nconst { Column, HeaderCell, Cell, Pagination } = Table;\r\n\r\ninterface IAction {\r\n  dataKey?:any,\r\n  rowData?:any\r\n}\r\n\r\nconst TableCon:React.FC<IProps> = (props:IProps) => {\r\n\r\n    const [data, setData] = useState<IProps[]>([])\r\n\r\n    const [page, setPage] = useState<number>(1)\r\n\r\n    const [displayLength, setDisplayLength] = useState<number>(10)\r\n\r\n    const [showData, setShowData] = useState<IProps[]>([])\r\n\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n\r\n    const [modalNew, setModalNew] = useState<boolean>(false)\r\n\r\n    const [flagSubmit, setFlagSubmit] = useState<boolean>(false)\r\n\r\n    const [modalEdit, setModalEdit] = useState<boolean>(false)\r\n\r\n    const [idEdit, setIdEdit] = useState<string>('')\r\n\r\n    const [modalDel, setModalDel] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users',\r\n          })\r\n            .then((res) => {\r\n              let tmpdatares = res.data.reverse()\r\n              let tmpdata = tmpdatares.filter((v:any,i:any) => {\r\n                const start = displayLength * (page - 1);\r\n                const end = start + displayLength;\r\n                return i >= start && i < end;\r\n              })\r\n              setData(res.data)\r\n              setShowData(tmpdata) \r\n              setLoading(false)  \r\n            })\r\n            .catch((err) => {\r\n              console.log(err)\r\n              // let title = 'Error'\r\n              // let decs = 'Something wrong ! Please check again !'\r\n              // openError({ title, decs })\r\n            })\r\n    }, [page, displayLength, flagSubmit])\r\n\r\n  //   useEffect(() => {\r\n  //     axios({\r\n  //         method: 'POST',\r\n  //         url: 'https://60f0525cf587af00179d3e8f.mockapi.io/hellohealth/users',\r\n  //         data: JSON.stringify({\r\n  //           email: 'asd',\r\n  //           position: 'asd',\r\n  //           name:'asd'\r\n  //         }),\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       }\r\n  //       })\r\n  //         .then((res) => {\r\n  //           console.log(res.data)\r\n  //           let tmpdata = res.data.filter((v:any,i:any) => {\r\n  //             const start = displayLength * (page - 1);\r\n  //             const end = start + displayLength;\r\n  //             return i >= start && i < end;\r\n  //           })\r\n  //           console.log(tmpdata)\r\n  //           setData(res.data)\r\n  //           setShowData(tmpdata)   \r\n  //         })\r\n  //         .catch((err) => {\r\n  //           console.log(err)\r\n  //           // let title = 'Error'\r\n  //           // let decs = 'Something wrong ! Please check again !'\r\n  //           // openError({ title, decs })\r\n  //         })\r\n  // }, [page, displayLength])\r\n\r\n    const ActionCell:React.FC<IAction> = (props:IAction) => {\r\n      return (\r\n        <Cell {...props} style={{ padding: '6px 0' }}>\r\n          <Button\r\n            appearance=\"link\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              setIdEdit(props.rowData.id)\r\n              setModalEdit(true)\r\n            }}\r\n          >\r\n            Edit\r\n            {/* {rowData.status === 'EDIT' ? 'Save' : 'Edit'} */}\r\n          </Button>\r\n          <Button\r\n            appearance=\"link\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              setIdEdit(props.rowData.id)\r\n              setModalDel(true)\r\n            }}\r\n          >\r\n            Delete\r\n            {/* {rowData.status === 'EDIT' ? 'Save' : 'Edit'} */}\r\n          </Button>\r\n        </Cell>\r\n      );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"newusercon\">\r\n          <div>\r\n          <Button appearance=\"primary\" onClick={() => setModalNew(true)}>New User</Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"tablecon\">\r\n        <Table \r\n          loading={loading} \r\n          data={showData} \r\n          autoHeight\r\n          bordered\r\n          cellBordered\r\n          //affixHeader\r\n        >\r\n          <Column width={50} align=\"center\">\r\n            <HeaderCell>Id</HeaderCell>\r\n            <Cell dataKey=\"id\" />\r\n          </Column>\r\n\r\n          <Column flexGrow={1}>\r\n            <HeaderCell>Name</HeaderCell>\r\n            <Cell dataKey=\"name\" />\r\n          </Column>\r\n\r\n          <Column flexGrow={1}>\r\n            <HeaderCell>Email</HeaderCell>\r\n            <Cell dataKey=\"email\" />\r\n          </Column>\r\n\r\n          <Column flexGrow={1}>\r\n            <HeaderCell>Position</HeaderCell>\r\n            <Cell dataKey=\"position\" />\r\n          </Column>\r\n\r\n          <Column width={150}>\r\n            <HeaderCell>Action</HeaderCell>\r\n            <ActionCell dataKey=\"id\" rowData/>\r\n          </Column>\r\n        </Table>\r\n        <Pagination\r\n          lengthMenu={[\r\n            {\r\n              value: 10,\r\n              label: 10\r\n            },\r\n            {\r\n              value: 20,\r\n              label: 20\r\n            }\r\n          ]}\r\n          activePage={page}\r\n          displayLength={displayLength}\r\n          total={data.length}\r\n          onChangePage={(e) => {\r\n              setLoading(true)\r\n              setPage(e)\r\n          }}\r\n          onChangeLength={(e) => {\r\n            setLoading(true)\r\n            setDisplayLength(e)\r\n        }}\r\n        />\r\n        </div>   \r\n        <ModalNew \r\n          setDisplayLength={setDisplayLength} \r\n          setPage={setPage} \r\n          modalNew={modalNew} \r\n          setModalNew={setModalNew} \r\n          flagSubmit={flagSubmit} \r\n          setFlagSubmit={setFlagSubmit}/>\r\n        <ModalEdit \r\n          idEdit={idEdit} \r\n          setDisplayLength={setDisplayLength} \r\n          setPage={setPage} \r\n          modalEdit={modalEdit} \r\n          setModalEdit={setModalEdit} \r\n          flagSubmit={flagSubmit} \r\n          setFlagSubmit={setFlagSubmit}/>\r\n        <ModalDel\r\n          idEdit={idEdit} \r\n          setDisplayLength={setDisplayLength} \r\n          setPage={setPage} \r\n          modalDel={modalDel} \r\n          setModalDel={setModalDel} \r\n          flagSubmit={flagSubmit} \r\n          setFlagSubmit={setFlagSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableCon","import React, {useState} from 'react'\r\n\r\nimport { Container, Header, Content, Footer, Sidebar, Sidenav, Nav } from 'rsuite';\r\n\r\nimport './container.scss'\r\n\r\nimport CounterCon from '../Counter/counter'\r\n\r\nimport TableCon from '../Table/table'\r\n\r\ninterface ContainerProps {\r\n    name?:string;\r\n}\r\n\r\nconst headerStyles = {\r\n    padding: 20,\r\n    fontSize: 16,\r\n    backgroundColor: 'rgb(0, 140, 132)',\r\n    color: ' #fff'\r\n  };\r\n\r\nconst ContainerCon:React.FC<ContainerProps> = (props:ContainerProps) => {\r\n    const [page, setPage] = useState<string>('Increase')\r\n    return (\r\n        <div>\r\n            <div className=\"show-container\">\r\n            <Container>\r\n            <Sidebar\r\n            style={{ display: 'flex', flexDirection: 'column' }}\r\n            // width={expand ? 260 : 56}\r\n            collapsible\r\n          >\r\n            <Sidenav appearance=\"subtle\" onSelect={(e) => {\r\n                // console.log(e)\r\n                setPage(e)\r\n            }}>\r\n              <Sidenav.Header>\r\n                {/* <div >\r\n                  <Icon icon=\"logo-analytics\" size=\"lg\" style={{ verticalAlign: 0 }} />\r\n                  <span style={{ marginLeft: 12 }}> BRAND</span>\r\n                </div> */}\r\n                <div style={headerStyles}>HHG Test Challenge</div>\r\n              </Sidenav.Header>\r\n              <Sidenav.Body>\r\n                <Nav>\r\n                    <Nav.Item eventKey=\"Increase\">\r\n                    Counter\r\n                  </Nav.Item>\r\n                  <Nav.Item eventKey=\"Table\">\r\n                    Table\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </Sidenav.Body>\r\n            </Sidenav>\r\n            {/* <NavToggle expand={expand} onChange={this.handleToggle} /> */}\r\n          </Sidebar>\r\n\r\n          <Container>\r\n            <Header>\r\n              {(() => {\r\n                  switch(page)\r\n                  {\r\n                      case 'Increase':\r\n                          return (\r\n                              <>\r\n                              <h3>Counter</h3>\r\n                              </>\r\n                          )\r\n                    case 'Table':\r\n                        return (\r\n                            <>\r\n                            <h3>Table</h3>\r\n                            </>\r\n                        )\r\n                  }\r\n              })()}\r\n            </Header>\r\n            <Content>\r\n                {(() => {\r\n                  switch(page)\r\n                  {\r\n                      case 'Increase':\r\n                          return (\r\n                              <>\r\n                              <CounterCon />\r\n                              </>\r\n                          )\r\n                    case 'Table':\r\n                        return (\r\n                            <>\r\n                            <TableCon />\r\n                            </>\r\n                        )\r\n                  }\r\n              })()}\r\n            </Content>\r\n            <Footer>@Copyright 2021 Binh Xuan Nguyen</Footer>\r\n          </Container>\r\n    </Container>\r\n            </div>      \r\n        </div>\r\n    )\r\n}\r\n\r\nContainerCon.defaultProps = {\r\n    name: 'test'\r\n}\r\n\r\nexport default ContainerCon","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n// import Login from './Login/login'\nimport Container from './Container/container'\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Login name='test'/> */}\n      <Container />\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}